name: Backend tests

on:
  push:

jobs:
  python-test:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]
        python-version: ['3.6', '3.7', '3.8']
    runs-on: ${{matrix.platform}}
    name: Python (${{matrix.python-version}})

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{matrix.python-version}}
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        cd ../
    - name: Run tests
      run: |
        cd backend
        export FLASK_APP=app:create_app
        export DATABASE_URL=sqlite:///test.db
        export TESTING=true
        export SECRET_KEY=afghrbej3424thnr1452@lafd2t.ewgrf4t4njhnr-gsfdjknbmv
        flask db upgrade
        python -m unittest tests.py
        rm -rf test.db
  rust-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - run: sudo apt-get postgresql-client-12 && cargo install diesel_cli --no-default-features --features postgres
      - run: diesel migration run --database-url postgres://postgres:postgres@localhost/postgres
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          SECRET_KEY: 'secret'
      - uses: actions-rs/grcov@v0.1
        with:
          config: codecov.yml
      - uses: codecov/codecov-action@v1
        with:
          file: ./coverage.txt
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}